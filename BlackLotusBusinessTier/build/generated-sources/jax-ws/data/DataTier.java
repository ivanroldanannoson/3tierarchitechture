
package data;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "DataTier", targetNamespace = "http://data/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface DataTier {


    /**
     * 
     * @param categoryId
     * @return
     *     returns data.Category
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCategoryById", targetNamespace = "http://data/", className = "data.GetCategoryById")
    @ResponseWrapper(localName = "getCategoryByIdResponse", targetNamespace = "http://data/", className = "data.GetCategoryByIdResponse")
    @Action(input = "http://data/DataTier/getCategoryByIdRequest", output = "http://data/DataTier/getCategoryByIdResponse")
    public Category getCategoryById(
        @WebParam(name = "categoryId", targetNamespace = "")
        int categoryId);

    /**
     * 
     * @param itemId
     * @return
     *     returns data.Item
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemById", targetNamespace = "http://data/", className = "data.GetItemById")
    @ResponseWrapper(localName = "getItemByIdResponse", targetNamespace = "http://data/", className = "data.GetItemByIdResponse")
    @Action(input = "http://data/DataTier/getItemByIdRequest", output = "http://data/DataTier/getItemByIdResponse")
    public Item getItemById(
        @WebParam(name = "itemId", targetNamespace = "")
        int itemId);

    /**
     * 
     * @param item
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createItem", targetNamespace = "http://data/", className = "data.CreateItem")
    @ResponseWrapper(localName = "createItemResponse", targetNamespace = "http://data/", className = "data.CreateItemResponse")
    @Action(input = "http://data/DataTier/createItemRequest", output = "http://data/DataTier/createItemResponse")
    public Integer createItem(
        @WebParam(name = "item", targetNamespace = "")
        Item item);

    /**
     * 
     * @param order
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertOrder", targetNamespace = "http://data/", className = "data.InsertOrder")
    @ResponseWrapper(localName = "insertOrderResponse", targetNamespace = "http://data/", className = "data.InsertOrderResponse")
    @Action(input = "http://data/DataTier/insertOrderRequest", output = "http://data/DataTier/insertOrderResponse")
    public Integer insertOrder(
        @WebParam(name = "order", targetNamespace = "")
        Order order);

    /**
     * 
     * @param vendorId
     * @return
     *     returns data.Vendor
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVendorById", targetNamespace = "http://data/", className = "data.GetVendorById")
    @ResponseWrapper(localName = "getVendorByIdResponse", targetNamespace = "http://data/", className = "data.GetVendorByIdResponse")
    @Action(input = "http://data/DataTier/getVendorByIdRequest", output = "http://data/DataTier/getVendorByIdResponse")
    public Vendor getVendorById(
        @WebParam(name = "vendorId", targetNamespace = "")
        int vendorId);

    /**
     * 
     * @return
     *     returns java.util.List<data.Order>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrders", targetNamespace = "http://data/", className = "data.GetOrders")
    @ResponseWrapper(localName = "getOrdersResponse", targetNamespace = "http://data/", className = "data.GetOrdersResponse")
    @Action(input = "http://data/DataTier/getOrdersRequest", output = "http://data/DataTier/getOrdersResponse")
    public List<Order> getOrders();

    /**
     * 
     * @param searchText
     * @return
     *     returns java.util.List<data.Item>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchOrCheckStockCakeByItemNameOrCode", targetNamespace = "http://data/", className = "data.SearchOrCheckStockCakeByItemNameOrCode")
    @ResponseWrapper(localName = "searchOrCheckStockCakeByItemNameOrCodeResponse", targetNamespace = "http://data/", className = "data.SearchOrCheckStockCakeByItemNameOrCodeResponse")
    @Action(input = "http://data/DataTier/searchOrCheckStockCakeByItemNameOrCodeRequest", output = "http://data/DataTier/searchOrCheckStockCakeByItemNameOrCodeResponse")
    public List<Item> searchOrCheckStockCakeByItemNameOrCode(
        @WebParam(name = "searchText", targetNamespace = "")
        String searchText);

    /**
     * 
     * @return
     *     returns java.util.List<data.Vendor>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVendors", targetNamespace = "http://data/", className = "data.GetVendors")
    @ResponseWrapper(localName = "getVendorsResponse", targetNamespace = "http://data/", className = "data.GetVendorsResponse")
    @Action(input = "http://data/DataTier/getVendorsRequest", output = "http://data/DataTier/getVendorsResponse")
    public List<Vendor> getVendors();

    /**
     * 
     * @param vendorType
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVendorTypeById", targetNamespace = "http://data/", className = "data.GetVendorTypeById")
    @ResponseWrapper(localName = "getVendorTypeByIdResponse", targetNamespace = "http://data/", className = "data.GetVendorTypeByIdResponse")
    @Action(input = "http://data/DataTier/getVendorTypeByIdRequest", output = "http://data/DataTier/getVendorTypeByIdResponse")
    public String getVendorTypeById(
        @WebParam(name = "vendorType", targetNamespace = "")
        int vendorType);

    /**
     * 
     * @param vendorId
     * @return
     *     returns java.util.List<data.Order>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrderByVendorId", targetNamespace = "http://data/", className = "data.GetOrderByVendorId")
    @ResponseWrapper(localName = "getOrderByVendorIdResponse", targetNamespace = "http://data/", className = "data.GetOrderByVendorIdResponse")
    @Action(input = "http://data/DataTier/getOrderByVendorIdRequest", output = "http://data/DataTier/getOrderByVendorIdResponse")
    public List<Order> getOrderByVendorId(
        @WebParam(name = "vendorId", targetNamespace = "")
        Integer vendorId);

    /**
     * 
     * @param loginData
     * @return
     *     returns data.Register
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkLogin", targetNamespace = "http://data/", className = "data.CheckLogin")
    @ResponseWrapper(localName = "checkLoginResponse", targetNamespace = "http://data/", className = "data.CheckLoginResponse")
    @Action(input = "http://data/DataTier/checkLoginRequest", output = "http://data/DataTier/checkLoginResponse")
    public Register checkLogin(
        @WebParam(name = "loginData", targetNamespace = "")
        Login loginData);

    /**
     * 
     * @param register
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "userRegister", targetNamespace = "http://data/", className = "data.UserRegister")
    @ResponseWrapper(localName = "userRegisterResponse", targetNamespace = "http://data/", className = "data.UserRegisterResponse")
    @Action(input = "http://data/DataTier/userRegisterRequest", output = "http://data/DataTier/userRegisterResponse")
    public Integer userRegister(
        @WebParam(name = "register", targetNamespace = "")
        Register register);

    /**
     * 
     * @param login
     * @return
     *     returns data.Vendor
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "vendorLogin", targetNamespace = "http://data/", className = "data.VendorLogin")
    @ResponseWrapper(localName = "vendorLoginResponse", targetNamespace = "http://data/", className = "data.VendorLoginResponse")
    @Action(input = "http://data/DataTier/vendorLoginRequest", output = "http://data/DataTier/vendorLoginResponse")
    public Vendor vendorLogin(
        @WebParam(name = "login", targetNamespace = "")
        Login login);

    /**
     * 
     * @param vendor
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "vendorRegister", targetNamespace = "http://data/", className = "data.VendorRegister")
    @ResponseWrapper(localName = "vendorRegisterResponse", targetNamespace = "http://data/", className = "data.VendorRegisterResponse")
    @Action(input = "http://data/DataTier/vendorRegisterRequest", output = "http://data/DataTier/vendorRegisterResponse")
    public Integer vendorRegister(
        @WebParam(name = "vendor", targetNamespace = "")
        Vendor vendor);

    /**
     * 
     * @param category
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createCategory", targetNamespace = "http://data/", className = "data.CreateCategory")
    @ResponseWrapper(localName = "createCategoryResponse", targetNamespace = "http://data/", className = "data.CreateCategoryResponse")
    @Action(input = "http://data/DataTier/createCategoryRequest", output = "http://data/DataTier/createCategoryResponse")
    public Integer createCategory(
        @WebParam(name = "category", targetNamespace = "")
        Category category);

    /**
     * 
     * @return
     *     returns java.util.List<data.Category>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCategories", targetNamespace = "http://data/", className = "data.GetCategories")
    @ResponseWrapper(localName = "getCategoriesResponse", targetNamespace = "http://data/", className = "data.GetCategoriesResponse")
    @Action(input = "http://data/DataTier/getCategoriesRequest", output = "http://data/DataTier/getCategoriesResponse")
    public List<Category> getCategories();

    /**
     * 
     * @return
     *     returns java.util.List<data.Item>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItems", targetNamespace = "http://data/", className = "data.GetItems")
    @ResponseWrapper(localName = "getItemsResponse", targetNamespace = "http://data/", className = "data.GetItemsResponse")
    @Action(input = "http://data/DataTier/getItemsRequest", output = "http://data/DataTier/getItemsResponse")
    public List<Item> getItems();

    /**
     * 
     * @param email
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkVendorExistByEmail", targetNamespace = "http://data/", className = "data.CheckVendorExistByEmail")
    @ResponseWrapper(localName = "checkVendorExistByEmailResponse", targetNamespace = "http://data/", className = "data.CheckVendorExistByEmailResponse")
    @Action(input = "http://data/DataTier/checkVendorExistByEmailRequest", output = "http://data/DataTier/checkVendorExistByEmailResponse")
    public Boolean checkVendorExistByEmail(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param email
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkUserExistByEmail", targetNamespace = "http://data/", className = "data.CheckUserExistByEmail")
    @ResponseWrapper(localName = "checkUserExistByEmailResponse", targetNamespace = "http://data/", className = "data.CheckUserExistByEmailResponse")
    @Action(input = "http://data/DataTier/checkUserExistByEmailRequest", output = "http://data/DataTier/checkUserExistByEmailResponse")
    public Boolean checkUserExistByEmail(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param category
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editCategoryById", targetNamespace = "http://data/", className = "data.EditCategoryById")
    @ResponseWrapper(localName = "editCategoryByIdResponse", targetNamespace = "http://data/", className = "data.EditCategoryByIdResponse")
    @Action(input = "http://data/DataTier/editCategoryByIdRequest", output = "http://data/DataTier/editCategoryByIdResponse")
    public Integer editCategoryById(
        @WebParam(name = "category", targetNamespace = "")
        Category category);

    /**
     * 
     * @param email
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getVendorTypeByEmail", targetNamespace = "http://data/", className = "data.GetVendorTypeByEmail")
    @ResponseWrapper(localName = "getVendorTypeByEmailResponse", targetNamespace = "http://data/", className = "data.GetVendorTypeByEmailResponse")
    @Action(input = "http://data/DataTier/getVendorTypeByEmailRequest", output = "http://data/DataTier/getVendorTypeByEmailResponse")
    public Integer getVendorTypeByEmail(
        @WebParam(name = "email", targetNamespace = "")
        String email);

    /**
     * 
     * @param categoryId
     * @return
     *     returns java.util.List<data.Item>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemsByCategory", targetNamespace = "http://data/", className = "data.GetItemsByCategory")
    @ResponseWrapper(localName = "getItemsByCategoryResponse", targetNamespace = "http://data/", className = "data.GetItemsByCategoryResponse")
    @Action(input = "http://data/DataTier/getItemsByCategoryRequest", output = "http://data/DataTier/getItemsByCategoryResponse")
    public List<Item> getItemsByCategory(
        @WebParam(name = "categoryId", targetNamespace = "")
        Integer categoryId);

    /**
     * 
     * @param categoryName
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkCategoryExistByName", targetNamespace = "http://data/", className = "data.CheckCategoryExistByName")
    @ResponseWrapper(localName = "checkCategoryExistByNameResponse", targetNamespace = "http://data/", className = "data.CheckCategoryExistByNameResponse")
    @Action(input = "http://data/DataTier/checkCategoryExistByNameRequest", output = "http://data/DataTier/checkCategoryExistByNameResponse")
    public Boolean checkCategoryExistByName(
        @WebParam(name = "categoryName", targetNamespace = "")
        String categoryName);

    /**
     * 
     * @param itemId
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCurrentStockByItemId", targetNamespace = "http://data/", className = "data.GetCurrentStockByItemId")
    @ResponseWrapper(localName = "getCurrentStockByItemIdResponse", targetNamespace = "http://data/", className = "data.GetCurrentStockByItemIdResponse")
    @Action(input = "http://data/DataTier/getCurrentStockByItemIdRequest", output = "http://data/DataTier/getCurrentStockByItemIdResponse")
    public Integer getCurrentStockByItemId(
        @WebParam(name = "itemId", targetNamespace = "")
        int itemId);

    /**
     * 
     * @param itemId
     * @param quantity
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateStockByItemId", targetNamespace = "http://data/", className = "data.UpdateStockByItemId")
    @ResponseWrapper(localName = "updateStockByItemIdResponse", targetNamespace = "http://data/", className = "data.UpdateStockByItemIdResponse")
    @Action(input = "http://data/DataTier/updateStockByItemIdRequest", output = "http://data/DataTier/updateStockByItemIdResponse")
    public Integer updateStockByItemId(
        @WebParam(name = "itemId", targetNamespace = "")
        int itemId,
        @WebParam(name = "quantity", targetNamespace = "")
        int quantity);

    /**
     * 
     * @param orderItem
     * @param orderId
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertOrderItem", targetNamespace = "http://data/", className = "data.InsertOrderItem")
    @ResponseWrapper(localName = "insertOrderItemResponse", targetNamespace = "http://data/", className = "data.InsertOrderItemResponse")
    @Action(input = "http://data/DataTier/insertOrderItemRequest", output = "http://data/DataTier/insertOrderItemResponse")
    public Integer insertOrderItem(
        @WebParam(name = "orderItem", targetNamespace = "")
        Item orderItem,
        @WebParam(name = "orderId", targetNamespace = "")
        int orderId);

    /**
     * 
     * @param item
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editItemById", targetNamespace = "http://data/", className = "data.EditItemById")
    @ResponseWrapper(localName = "editItemByIdResponse", targetNamespace = "http://data/", className = "data.EditItemByIdResponse")
    @Action(input = "http://data/DataTier/editItemByIdRequest", output = "http://data/DataTier/editItemByIdResponse")
    public Integer editItemById(
        @WebParam(name = "item", targetNamespace = "")
        Item item);

    /**
     * 
     * @param invoiceId
     * @return
     *     returns data.Order
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrdersByInvoiceId", targetNamespace = "http://data/", className = "data.GetOrdersByInvoiceId")
    @ResponseWrapper(localName = "getOrdersByInvoiceIdResponse", targetNamespace = "http://data/", className = "data.GetOrdersByInvoiceIdResponse")
    @Action(input = "http://data/DataTier/getOrdersByInvoiceIdRequest", output = "http://data/DataTier/getOrdersByInvoiceIdResponse")
    public Order getOrdersByInvoiceId(
        @WebParam(name = "invoiceId", targetNamespace = "")
        int invoiceId);

    /**
     * 
     * @param password
     * @param email
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updatePasswordByEmail", targetNamespace = "http://data/", className = "data.UpdatePasswordByEmail")
    @ResponseWrapper(localName = "updatePasswordByEmailResponse", targetNamespace = "http://data/", className = "data.UpdatePasswordByEmailResponse")
    @Action(input = "http://data/DataTier/updatePasswordByEmailRequest", output = "http://data/DataTier/updatePasswordByEmailResponse")
    public Boolean updatePasswordByEmail(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.util.List<data.Register>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://data/", className = "data.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://data/", className = "data.GetUsersResponse")
    @Action(input = "http://data/DataTier/getUsersRequest", output = "http://data/DataTier/getUsersResponse")
    public List<Register> getUsers();

    /**
     * 
     * @param email
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUserRole", targetNamespace = "http://data/", className = "data.GetUserRole")
    @ResponseWrapper(localName = "getUserRoleResponse", targetNamespace = "http://data/", className = "data.GetUserRoleResponse")
    @Action(input = "http://data/DataTier/getUserRoleRequest", output = "http://data/DataTier/getUserRoleResponse")
    public Integer getUserRole(
        @WebParam(name = "email", targetNamespace = "")
        String email);

}
